{"src/index.js":{"hash":"2f0038e480b14d8aefa4058365397691","res":{"results":[{"filePath":"/Users/geoffreyziobro/Documents/software_dev/Sounder/frontEnd/src/index.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/App.js":{"hash":"ed500f3871e5925adc4cc516a31bfc08","res":{"results":[{"filePath":"/Users/Swope/Desktop/Spring_2017/Software Dev/Sounder/frontEnd/src/App.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/LoginPage.js":{"hash":"e51ba97221dc41567ba789ffe66e4ea7","res":{"results":[{"filePath":"/Users/bentindall/Documents/Sounder/frontEnd/src/Components/LoginPage.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/SignUpPage.js":{"hash":"7bcf0187b2e82212796a2740d9412203","res":{"results":[{"filePath":"/Users/Swope/Desktop/Spring_2017/Software Dev/Sounder/frontEnd/src/Components/SignUpPage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'DropdownButton' is defined but never used.","line":15,"column":8,"nodeType":"Identifier","source":"import DropdownButton from 'react-bootstrap/lib/DropdownButton.js';"},{"ruleId":"no-unused-vars","severity":1,"message":"'MenuItem' is defined but never used.","line":16,"column":8,"nodeType":"Identifier","source":"import MenuItem from 'react-bootstrap/lib/MenuItem.js';"},{"ruleId":"eqeqeq","severity":1,"message":"Expected '===' and instead saw '=='.","line":180,"column":20,"nodeType":"BinaryExpression","source":"  if (checkValid() == true){"},{"ruleId":"array-callback-return","severity":1,"message":"Expected to return a value at the end of this function.","line":188,"column":33,"nodeType":"FunctionExpression","source":"    Object.keys(newUserObj).map(function(key){ //checks that all fields complete"},{"ruleId":"eqeqeq","severity":1,"message":"Expected '===' and instead saw '=='.","line":195,"column":61,"nodeType":"BinaryExpression","source":"    if (newUserObj.song1.search(\"w.soundcloud.com/player/\") == -1 ||"},{"ruleId":"eqeqeq","severity":1,"message":"Expected '===' and instead saw '=='.","line":196,"column":41,"nodeType":"BinaryExpression","source":"      newUserObj.song1.search(\"tracks\") == -1){ //Checks if the song is a valid code and not a playlist"},{"ruleId":"eqeqeq","severity":1,"message":"Expected '===' and instead saw '=='.","line":199,"column":61,"nodeType":"BinaryExpression","source":"    if (newUserObj.song2.search(\"w.soundcloud.com/player/\") == -1 ||"},{"ruleId":"eqeqeq","severity":1,"message":"Expected '===' and instead saw '=='.","line":200,"column":41,"nodeType":"BinaryExpression","source":"      newUserObj.song2.search(\"tracks\") == -1){ //Checks if the song is a valid code and not a playlist"},{"ruleId":"eqeqeq","severity":1,"message":"Expected '===' and instead saw '=='.","line":203,"column":61,"nodeType":"BinaryExpression","source":"    if (newUserObj.song3.search(\"w.soundcloud.com/player/\") == -1 ||"},{"ruleId":"eqeqeq","severity":1,"message":"Expected '===' and instead saw '=='.","line":204,"column":41,"nodeType":"BinaryExpression","source":"      newUserObj.song3.search(\"tracks\") == -1){ //Checks if the song is a valid code and not a playlist"},{"ruleId":"eqeqeq","severity":1,"message":"Expected '===' and instead saw '=='.","line":207,"column":53,"nodeType":"BinaryExpression","source":"    if (newUserObj.profilePictureURL.search(\".jpg\") == -1 && newUserObj.profilePictureURL.search(\".png\") == -1){ //Image URL should end in .jpg or .png"},{"ruleId":"eqeqeq","severity":1,"message":"Expected '===' and instead saw '=='.","line":207,"column":106,"nodeType":"BinaryExpression","source":"    if (newUserObj.profilePictureURL.search(\".jpg\") == -1 && newUserObj.profilePictureURL.search(\".png\") == -1){ //Image URL should end in .jpg or .png"}],"errorCount":0,"warningCount":12,"source":"/*\n  SignUpPage.js\n\n  This provides the implementation for the signUp page.\n\n\n*/\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n\n//import MultiGenreSelect from './MultiGenreSelect.js';\n\n//import Col from 'react-bootstrap/lib/Col.js';\n\nimport DropdownButton from 'react-bootstrap/lib/DropdownButton.js';\nimport MenuItem from 'react-bootstrap/lib/MenuItem.js';\nimport MultiGenreSelect from './MultiGenreSelect.js'\n\n\n//import Col from 'react-bootstrap/lib/Col.js';\n\n\nconst LoginPage = styled.div`\n  text-align: center;\n  margin-top: 100px;\n  height: 50%;\n`;\n\nconst UsernameInput = styled.div`\n  background-color: #FF7700; /* orange  */\n  position: relative;\n  padding: 10px;\n  font-size: 16px;\n  height:50;\n  width: 300px;\n  display: inline-block;\n`;\n\n\n\nconst LoginButton = styled.div`\n  background-color: #525252; /* Green */\n  border: none;\n  color: white;\n  padding: 10px 20px 10px 20px;\n  cursor: pointer;\n  border-radius: 28px;\n  margin-right: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin-top: 10px;\n  &:hover {\n   background-color:#FF7700;\n }\n\n`;\n\nconst SounderHeader = styled.div`\n  font-size: 3.0em;\n  font-weight: bold;\n  font-variant: small-caps;\n  color:#525252;\n`;\n\nconst Input = styled.input`\n  width:200px;\n  height:25px;\n\n`;\n\nclass SignUp extends Component{\n  constructor(){\n    super();\n    this.state = {\n      id: '',\n      username: '',\n      password: '',\n      song1: '',\n      song2: '',\n      song3: '',\n      profileURL: '',\n      genres: '', //make this an array later\n      numFollowers: '',\n      profilePictureURL: '',\n      email: '',\n\t\t\tvalue: ''\n\n    }\n  };\n\nhandleSelectChange (value) {\n  console.log('You\\'ve selected:', value);\n  this.setState({ value });\n  console.log(this.state.value);\n}\n\nhandleUsername(inputEvent){\n  this.setState({username: inputEvent.target.value});\n}\n\nhandlePassword(inputEvent){\n  this.setState({password: inputEvent.target.value});\n}\n\nhandleSong1(inputEvent){\n  this.setState({song1: inputEvent.target.value});\n}\n\nhandleSong2(inputEvent){\n  this.setState({song2: inputEvent.target.value});\n}\n\nhandleSong3(inputEvent){\n  this.setState({song3: inputEvent.target.value});\n}\n\nhandleProfileURL(inputEvent){\n  this.setState({profileURL: inputEvent.target.value});\n}\n\nhandleNumFollowers(inputEvent){\n  this.setState({numFollowers: inputEvent.target.value});\n}\n\nhandleGenres(inputEvent){ //make this an array handler later\n  this.setState({genres: inputEvent.target.value});\n}\n\nhandlePhotoURL(inputEvent){\n  this.setState({profilePictureURL: inputEvent.target.value});\n\n}\n\nhandleEmail(inputEvent){\n  this.setState({email: inputEvent.target.value});\n}\n\n\n\n\n/*\n ********************************************************************\n User Object Creation: put all standardized property conventions here\n ********************************************************************\n*/\n\ncreateUser(){ //creates the actual user object\n  let newUserObj = {\n  username: this.state.username,\n  password: this.state.password,\n  song1: this.state.song1,\n  song2: this.state.song2,\n  song3: this.state.song3,\n  profileURL: this.state.profileURL,\n  genre: this.state.value, //make this an array later\n  numFollowers: this.state.numFollowers,\n  profilePictureURL: this.state.profilePictureURL,\n  email: this.state.email,\n  karma: 0,\n  followerRangeMin : 0,\n  followerRangeMax : 100000000\n\n  /* How to handle these? */\n\n  //id:\n  //followers:\n  //id;\n  //followers: //who follows the user\n  //following: //who the user follows\n  //followerRange:\n  //peopleYouLike:\n  //peopleWhoLikedYou:\n  //currentMatches:\n  //pastMatches:\n  //online:\n  }\n\n  if (checkValid() == true){\n    this.props.newUser(newUserObj);\n  }\n\n  //CheckValid looks all the sign-up parameters to see if they are valid. Returns true if valid.\n  function checkValid(){\n    let complete = false; //Initialize as false just in case some checks fail.\n\n    Object.keys(newUserObj).map(function(key){ //checks that all fields complete\n      if (newUserObj[key] === \"\"){ //If anything is empty then alert the user\n        alert(\"please fill out the \" + key + \" section\");\n        return complete;\n      }\n    })\n\n    if (newUserObj.song1.search(\"w.soundcloud.com/player/\") == -1 ||\n      newUserObj.song1.search(\"tracks\") == -1){ //Checks if the song is a valid code and not a playlist\n        alert(\"Please insert a valid embed code for song 1!\");\n    }\n    if (newUserObj.song2.search(\"w.soundcloud.com/player/\") == -1 ||\n      newUserObj.song2.search(\"tracks\") == -1){ //Checks if the song is a valid code and not a playlist\n        alert(\"Please insert a valid embed code for song 2!\");\n    }\n    if (newUserObj.song3.search(\"w.soundcloud.com/player/\") == -1 ||\n      newUserObj.song3.search(\"tracks\") == -1){ //Checks if the song is a valid code and not a playlist\n        alert(\"Please insert a valid embed code for song 3!\");\n    }\n    if (newUserObj.profilePictureURL.search(\".jpg\") == -1 && newUserObj.profilePictureURL.search(\".png\") == -1){ //Image URL should end in .jpg or .png\n        alert(\"Please enter a .jpg or .png file for profile picture!\");\n    }\n    // if(newUserObj.password != newUserObj.password2) { //checks that password/confirm password match\n    //   alert(\"Passwords do not match, please confirm password\")\n    // }\n    else {\n      complete = true;\n    }\n    return complete;\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrender() {\n  let usernameInput = (<Input  placeholder=\"Username\" type=\"text\" value={this.state.username} onChange={(event)=>{this.handleUsername(event)}}/>);\n  let passwordInput = (<Input  placeholder=\"Password\" type=\"text\" value={this.state.password} onChange={(event)=>{this.handlePassword(event)}}/>);\n  let song1Input = (<Input  placeholder=\"Song 1 URL\" type=\"text\" value={this.state.song1} onChange={(event)=>{this.handleSong1(event)}}/>);\n  let song2Input = (<Input  placeholder=\"Song 2 URL\" type=\"text\" value={this.state.song2} onChange={(event)=>{this.handleSong2(event)}}/>);\n  let song3Input = (<Input  placeholder=\"Song 3 URL\" type=\"text\" value={this.state.song3} onChange={(event)=>{this.handleSong3(event)}}/>);\n  let profileURLInput = (<Input  placeholder=\"Soundcloud Profile URL\" type=\"text\" value={this.state.profileURL} onChange={(event)=>{this.handleProfileURL(event)}}/>);\n  let numFollowersInput = (<Input  placeholder=\"# of SC Followers\" type=\"text\" value={this.state.numFollowers} onChange={(event)=>{this.handleNumFollowers(event)}}/>);\n\n  //let photoURLInput = (<Input  placeholder=\"Photo URL\" type=\"text\" value={this.state.profilePictureURL} onChange={(event)=>{this.handlePhotoURL(event)}}/>);\n  let emailInput = (<Input  placeholder=\"Email\" type=\"text\" value={this.state.email} onChange={(event)=>{this.handleEmail(event)}}/>);\n  let genre = (<MultiGenreSelect handleSelectChange={(value)=>this.handleSelectChange(value)} value={this.state.value}/>)\n\n  //let genre = (<MultiGenreSelect handleSelectChange={(value)=>this.handleSelectChange(value)} value={this.state.value}/>)\n  let photoURLInput = (<Input  placeholder=\"Photo URL\" type=\"text\" value={this.state.profilePictureURL} onChange={(event)=>{this.handlePhotoURL(event)}}/>);\n  //let emailInput = (<Input  placeholder=\"Email\" type=\"text\" value={this.state.email} onChange={(event)=>{this.handleEmail(event)}}/>);\n\n  // let genreOps = [\"Alternative Rock\", \"Ambient\", \"Classical\", \"Country\", \"Dance & EDM\", \"Dancehall\", \"Deep House\",\n  // \"Disco\", \"Drum & Bass\", \"Dubstep\", \"Electronic\", \"Folk & Singer-Songwriter\", \"Hip-Hop & Rap\", \"House\", \"Indie\", \"Jazz & Blues\", \"Latin\",\n  // \"Metal\", \"Piano\", \"Pop\", \"R&B & Soul\", \"Reggae\", \"Reggaeton\", \"Rock\", \"Soundtrack\", \"Techno\", \"Trance\", \"Trap\", \"Triphop\", \"World\"]\n  // let counter = 0;\n  // const genrelist = (genreOps).map((genrei)=>{ //creates a genrelist that is displayed in the \"Genre\" dropdown\n  //   counter += 1;\n  //   return (<MenuItem eventKey={counter} onClick={()=>{console.log(genrei)}}> {genrei} </MenuItem>);});\n  //\n  // let genre = (<DropdownButton title='Genres' id='genre-dropdown' onChange={(event)=>{this.handleGenres(event)}}>\n  //           {genrelist}\n  //           </DropdownButton>)\n\n\n  let signUp = (<LoginButton onClick={()=>this.createUser()}>Sign Up</LoginButton>);\n  let cancel = (<LoginButton onClick={()=>this.props.switchToLogin()} >Cancel</LoginButton>);\n\n\n    return(\n      <LoginPage>\n        <SounderHeader>\n        Sounder\n        </SounderHeader>\n        <UsernameInput>\n          {usernameInput}\n        </UsernameInput>\n\n        <div>\n          <UsernameInput>\n            {passwordInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {song1Input}\n            {song2Input}\n            {song3Input}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {profileURLInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {numFollowersInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {genre}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {photoURLInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {emailInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n        {signUp}\n        {cancel}\n        </div>\n        </LoginPage>\n\n      );\n\n}\n}\nexport default SignUp;\n"}],"errorCount":0,"warningCount":12}},"src/Components/MatchingSettingsPage.js":{"hash":"50078db697fce59447e02c6fb0cb0019","res":{"results":[{"filePath":"/Users/hannahbeach983/Desktop/Sounder/frontEnd/src/Components/MatchingSettingsPage.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/MatchPage.js":{"hash":"34fd43336215d2887ef1ebabe5b77d5e","res":{"results":[{"filePath":"/Users/hannahbeach983/Desktop/Sounder/frontEnd/src/Components/MatchPage.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/HomePage.js":{"hash":"096233082b0fe3729aca2168bfb35ee5","res":{"results":[{"filePath":"/Users/hannahbeach983/Desktop/Sounder/frontEnd/src/Components/HomePage.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/MatchDetailPage.js":{"hash":"6e8339fc4b3b2b2a3aa1317fa2afa9ed","res":{"results":[{"filePath":"/Users/hannahbeach983/Desktop/Sounder/frontEnd/src/Components/MatchDetailPage.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/NavBar.js":{"hash":"4bd708225030eb1b1a2efba08621490d","res":{"results":[{"filePath":"/Users/hannahbeach983/Desktop/Sounder/frontEnd/src/Components/NavBar.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/UserDetail.js":{"hash":"4e545e1b1f19055c14a7551217407790","res":{"results":[{"filePath":"/Users/Swope/Desktop/Spring_2017/Software Dev/Sounder/frontEnd/src/Components/UserDetail.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/MatchLog.js":{"hash":"2c910ccb2370586f8a6a16f6f94e3996","res":{"results":[{"filePath":"/Users/Swope/Desktop/Spring_2017/Software Dev/Sounder/frontEnd/src/Components/MatchLog.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'TimeStyle' is assigned a value but never used.","line":55,"column":7,"nodeType":"Identifier","source":"const TimeStyle = styled.p`"}],"errorCount":0,"warningCount":1,"source":"/*\n\nMatchLog.js\n\nMatchLog takes in 2 props: matchlist and clickMatch\n-matchlist is an array of objects that store the acccount information\nof the artists that currentLogin has matched with\n-clickMatch is a callback function that updates the state of mode and currentMatch in App.js\n\n\n*/\n\n\nimport React  from 'react';\nimport styled from 'styled-components';\nimport Grid from 'react-bootstrap/lib/Grid.js';\nimport Row from 'react-bootstrap/lib/Row.js';\nimport Col from 'react-bootstrap/lib/Col.js';\nimport ListGroup from 'react-bootstrap/lib/ListGroup.js';\nimport ListGroupItem from 'react-bootstrap/lib/ListGroupItem.js';\nimport '../index.css';\nimport Popover from 'react-bootstrap/lib/Popover.js';\nimport OverlayTrigger from 'react-bootstrap/lib/OverlayTrigger.js';\n\nconst CenteredTitle=styled.h2`\n  font-weight: bold;\n  text-align: center;\n  border-bottom: 2px solid #ff4b00;\n  padding-bottom: 10px;\n`;\n\nconst MatchName = styled(ListGroupItem)`\n  color: black;\n  font-size: 16px;\n  curson: pointer;\n  &:hover {\n   color: #FF7700;\n }\n\n`;\n\nconst MatchNameStyle = styled(Col)`\n cursor: pointer;\n  &:hover {\n   color: #FF7700;\n }\n`\nconst NameStyle = styled.p`\n cursor: pointer;\n font-weight: bold;\n  &:hover {\n   color: #FF7700;\n }\n `\nconst TimeStyle = styled.p`\n cursor: pointer;\n font-style: italic;\n  &:hover {\n   color: #FF7700;\n }\n`\n\nconst MatchPreview = styled(Popover)`\n  width: 400px;\n\n`\n\n\nfunction MatchLog(props){\n  const matchlog = (props.matchlist).map((user)=>{\n    let name = user.username;\n    let timeString = props.matchTimes[user.id][0];\n    let time;\n    if (timeString.length === 11){\n        time = timeString;\n    } else{\n      time = '';\n\n    }\n  //  name = name + ' ' + time;\n    const popoverHoverFocus = (\n    <MatchPreview id=\"popover-trigger-hover-focus\" title={name}  positionLeft={200}\n      positionTop={50}>\n      <p><strong>Genre</strong> {user.genre.replace(/,/g, \", \")}</p>\n      <p><strong>Followers</strong> {user.numFollowers}</p>\n      <p><strong>Karma</strong> {user.karma}</p>\n      <p><strong>Matched</strong> {time}</p>\n    </MatchPreview>\n  );\n    return (\n        <MatchName key={name} value={name} onClick={()=>{props.clickMatch(user)}}>\n          <OverlayTrigger trigger={['hover', 'focus']} placement=\"top\" overlay={popoverHoverFocus} arrowOffsetLeft='40px'>\n            <MatchNameStyle lg={12}> <NameStyle>{name}</NameStyle></MatchNameStyle>\n          </OverlayTrigger>\n        </MatchName>\n    );\n  });\n\n  return (\n    <Grid fluid={true}>\n      <Row>\n        <Col lg={12} md={12} sm={12} ><CenteredTitle>Matches</CenteredTitle></Col>\n      </Row>\n      <Row>\n        <Col lg={12} md={12} sm={12} >\n          <ListGroup>{matchlog}</ListGroup>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default MatchLog;\n"}],"errorCount":0,"warningCount":1}},"src/Components/EmbedSong.js":{"hash":"82adc6e240fdc84163c781f6055b6446","res":{"results":[{"filePath":"/Users/bentindall/Documents/Sounder/frontEnd/src/Components/EmbedSong.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/MultiGenreSelect.js":{"hash":"0d63593d45a60b2e3a6ac48ecb6da246","res":{"results":[{"filePath":"/Users/Swope/Desktop/Spring_2017/Software Dev/Sounder/frontEnd/src/Components/MultiGenreSelect.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/WelcomePage.js":{"hash":"8822d3b808823adf3650eacd6ab44c34","res":{"results":[{"filePath":"/Users/Swope/Desktop/Spring_2017/Software Dev/Sounder/frontEnd/src/Components/WelcomePage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'Component' is defined but never used.","line":1,"column":17,"nodeType":"Identifier","source":"import React, { Component } from 'react';"},{"ruleId":"no-unused-vars","severity":1,"message":"'Logo' is assigned a value but never used.","line":10,"column":7,"nodeType":"Identifier","source":"const Logo = styled(Image)`"},{"ruleId":"no-unused-vars","severity":1,"message":"'StyledCol' is assigned a value but never used.","line":14,"column":7,"nodeType":"Identifier","source":"const StyledCol = styled(Col)`"}],"errorCount":0,"warningCount":3,"source":"import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Image from 'react-bootstrap/lib/Image.js';\nimport sounderLogo from './sounder.png'\nimport Grid from 'react-bootstrap/lib/Grid.js';\nimport Row from 'react-bootstrap/lib/Row.js';\nimport Col from 'react-bootstrap/lib/Col.js';\n\n\nconst Logo = styled(Image)`\n  margin-top: 40px;\n`\n\nconst StyledCol = styled(Col)`\n  margin-left: 20px;\n\n\n`\nconst Title = styled.p`\n  margin-top: 20px;\n  font-size: 60px;\n  font-weight:bold;\n  margin-left: 20px;\n`;\n\n\nconst WelcomeText = styled.p`\n  margin-top: 10px;\n  font-size: 36px;\n  margin-left: 20px;\n`;\n\nconst HeadlineText = styled.p`\n  margin-top: 20px;\n  font-size: 24px\n  margin-left: 20px;\n`;\n\n\n\n\nfunction WelcomePage(){\n\n  let title = (<Title> Sounder </Title>)\n  let sounderIcon = (<Image src={sounderLogo}   width=\"550px\" height=\"550px\"/>);\n  let welcomeText = (<WelcomeText> A networking platform for like-minded SoundCloud artists. </WelcomeText>);\n  let headlineOne =(<HeadlineText> Organically grow your follower base. </HeadlineText>);\n\n  let headlineTwo= (<HeadlineText> Connect with SoundCloud artists from around the world. </HeadlineText>);\n  let headlineThree= (<HeadlineText> Find new music in your favorite genre. </HeadlineText>);\n\nreturn(\n\n  <div>\n    <div>\n    <Grid>\n    <Row>\n      <Col lg={6} md={6} >\n    {sounderIcon}\n      </Col>\n      <Col lg={6} md={6} >\n      <Row>\n      {title}\n      </Row>\n      <Row>\n      {welcomeText}\n      </Row>\n      <Row>\n      {headlineOne}\n      </Row>\n      <Row>\n      {headlineTwo}\n      </Row>\n      <Row>\n      {headlineThree}\n      </Row>\n      </Col>\n\n    </Row>\n    </Grid>\n    </div>\n    </div>\n  );\n}\n\nexport default WelcomePage;\n"}],"errorCount":0,"warningCount":3}},"src/Components/WelcomeNavBar.js":{"hash":"2cc870ec01689bfe8699836010f05d6e","res":{"results":[{"filePath":"/Users/geoffreyziobro/Documents/software_dev/Sounder/frontEnd/src/Components/WelcomeNavBar.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}}}