<<<<<<< HEAD
{"src/index.js":{"hash":"2f0038e480b14d8aefa4058365397691","res":{"results":[{"filePath":"/Users/bentindall/Documents/Sounder/frontEnd/src/index.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/App.js":{"hash":"b279042635628a0e7191e5d4879e0d9e","res":{"results":[{"filePath":"/Users/hannahbeach983/Desktop/Sounder/frontEnd/src/App.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/LoginPage.js":{"hash":"e51ba97221dc41567ba789ffe66e4ea7","res":{"results":[{"filePath":"/Users/bentindall/Documents/Sounder/frontEnd/src/Components/LoginPage.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/SignUpPage.js":{"hash":"bfe163d83973427cfec09170e250b4cd","res":{"results":[{"filePath":"/Users/hannahbeach983/Desktop/Sounder/frontEnd/src/Components/SignUpPage.js","messages":[{"ruleId":"array-callback-return","severity":1,"message":"Expected to return a value in this function.","line":172,"column":31,"nodeType":"FunctionExpression","source":"  Object.keys(newUserObj).map(function(key){ //checks that all fields complete"}],"errorCount":0,"warningCount":1,"source":"/*\n  SignUpPage.js\n\n  This provides the implementation for the signUp page.\n\n\n*/\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport MultiGenreSelect from './MultiGenreSelect.js';\n\n//import Col from 'react-bootstrap/lib/Col.js';\n\n\nconst LoginPage = styled.div`\n  text-align: center;\n  margin-top: 100px;\n  height: 50%;\n`;\n\nconst UsernameInput = styled.div`\n  background-color: #FF7700; /* orange  */\n  position: relative;\n  padding: 10px;\n  font-size: 16px;\n  height:50;\n  width: 300px;\n  display: inline-block;\n`;\n\n\n\nconst LoginButton = styled.div`\n  background-color: #525252; /* Green */\n  border: none;\n  color: white;\n  padding: 10px 20px 10px 20px;\n  cursor: pointer;\n  border-radius: 28px;\n  margin-right: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin-top: 10px;\n  &:hover {\n   background-color:#FF7700;\n }\n\n`;\n\nconst SounderHeader = styled.div`\n  font-size: 3.0em;\n  font-weight: bold;\n  font-variant: small-caps;\n  color:#525252;\n`;\n\nconst Input = styled.input`\n  width:200px;\n  height:25px;\n\n`;\n\nclass SignUp extends Component{\n  constructor(){\n    super();\n    this.state = {\n      id: '',\n      username: '',\n      password: '',\n      song1: '',\n      song2: '',\n      song3: '',\n      profileURL: '',\n      genres: '', //make this an array later\n      numFollowers: '',\n      profilePictureURL: '',\n      email: '',\n\t\t\tvalue: []\n\n    }\n  };\n\nhandleSelectChange (value) {\n  console.log('You\\'ve selected:', value);\n  this.setState({ value });\n  console.log(this.state.value);\n}\n\nhandleUsername(inputEvent){\n  this.setState({username: inputEvent.target.value});\n}\n\nhandlePassword(inputEvent){\n  this.setState({password: inputEvent.target.value});\n}\n\nhandleSong1(inputEvent){\n  this.setState({song1: inputEvent.target.value});\n}\n\nhandleSong2(inputEvent){\n  this.setState({song2: inputEvent.target.value});\n}\n\nhandleSong3(inputEvent){\n  this.setState({song3: inputEvent.target.value});\n}\n\nhandleProfileURL(inputEvent){\n  this.setState({profileURL: inputEvent.target.value});\n}\n\nhandleNumFollowers(inputEvent){\n  this.setState({numFollowers: inputEvent.target.value});\n}\n\nhandleGenres(inputEvent){ //make this an array handler later\n  this.setState({genres: inputEvent.target.value});\n}\n\nhandlePhotoURL(inputEvent){\n  this.setState({profilePictureURL: inputEvent.target.value});\n\n}\n\nhandleEmail(inputEvent){\n  this.setState({email: inputEvent.target.value});\n}\n\n\n\n\n/*\n ********************************************************************\n User Object Creation: put all standardized property conventions here\n ********************************************************************\n*/\n\ncreateUser(){ //creates the actual user object\n  let newUserObj = {\n  username: this.state.username,\n  password: this.state.password,\n  song1: this.state.song1,\n  song2: this.state.song2,\n  song3: this.state.song3,\n  profileURL: this.state.profileURL,\n  genre: this.state.value, //make this an array later\n  numFollowers: this.state.numFollowers,\n  profilePictureURL: this.state.profilePictureURL,\n  email: this.state.email,\n  karma: 0,\n\n  /* How to handle these? */\n\n  //id:\n  //followers:\n  //id;\n  //followers: //who follows the user\n  //following: //who the user follows\n  //followerRange:\n  //peopleYouLike:\n  //peopleWhoLikedYou:\n  //currentMatches:\n  //pastMatches:\n  //online:\n  }\n\n  console.log(this.state.value);\n  let complete = true;\n  Object.keys(newUserObj).map(function(key){ //checks that all fields complete\n    if (newUserObj[key] === \"\"){\n      complete = false;\n      alert(\"please fill out the \" + key + \" section\");\n    }\n  })\n  if (complete === true){\n    this.props.newUser(newUserObj);\n  }\n}\n\nrender() {\n  let usernameInput = (<Input  placeholder=\"Username\" type=\"text\" value={this.state.username} onChange={(event)=>{this.handleUsername(event)}}/>);\n  let passwordInput = (<Input  placeholder=\"Password\" type=\"text\" value={this.state.password} onChange={(event)=>{this.handlePassword(event)}}/>);\n  let song1Input = (<Input  placeholder=\"Song 1 URL\" type=\"text\" value={this.state.song1} onChange={(event)=>{this.handleSong1(event)}}/>);\n  let song2Input = (<Input  placeholder=\"Song 2 URL\" type=\"text\" value={this.state.song2} onChange={(event)=>{this.handleSong2(event)}}/>);\n  let song3Input = (<Input  placeholder=\"Song 3 URL\" type=\"text\" value={this.state.song3} onChange={(event)=>{this.handleSong3(event)}}/>);\n  let profileURLInput = (<Input  placeholder=\"Soundcloud Profile URL\" type=\"text\" value={this.state.profileURL} onChange={(event)=>{this.handleProfileURL(event)}}/>);\n  let numFollowersInput = (<Input  placeholder=\"# of SC Followers\" type=\"text\" value={this.state.numFollowers} onChange={(event)=>{this.handleNumFollowers(event)}}/>);\n  let photoURLInput = (<Input  placeholder=\"Photo URL\" type=\"text\" value={this.state.profilePictureURL} onChange={(event)=>{this.handlePhotoURL(event)}}/>);\n  let emailInput = (<Input  placeholder=\"Email\" type=\"text\" value={this.state.email} onChange={(event)=>{this.handleEmail(event)}}/>);\n  let genre = (<MultiGenreSelect handleSelectChange={(value)=>this.handleSelectChange(value)} value={this.state.value}/>)\n  let signUp = (<LoginButton onClick={()=>this.createUser()}>Sign Up</LoginButton>);\n  let cancel = (<LoginButton onClick={()=>this.props.switchToLogin()} >Cancel</LoginButton>);\n\n\n    return(\n      <LoginPage>\n        <SounderHeader>\n        Sounder\n        </SounderHeader>\n        <UsernameInput>\n          {usernameInput}\n        </UsernameInput>\n\n        <div>\n          <UsernameInput>\n            {passwordInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {song1Input}\n            {song2Input}\n            {song3Input}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {profileURLInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {numFollowersInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {genre}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {photoURLInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {emailInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n        {signUp}\n        {cancel}\n        </div>\n        </LoginPage>\n\n      );\n\n}\n}\nexport default SignUp;\n"}],"errorCount":0,"warningCount":1}},"src/Components/MatchingSettingsPage.js":{"hash":"9a7c287aa8dba6a24b83e6ccb7959d08","res":{"results":[{"filePath":"/Users/hannahbeach983/Desktop/Sounder/frontEnd/src/Components/MatchingSettingsPage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'counter' is assigned a value but never used.","line":93,"column":9,"nodeType":"Identifier","source":"    let counter = 0;"}],"errorCount":0,"warningCount":1,"source":"/*\n  MatchingSettingsPage.js\n\n  This provides the implementation for the profile component.\n\n*/\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/lib/Button.js';\nimport Grid from 'react-bootstrap/lib/Grid.js';\nimport Row from 'react-bootstrap/lib/Row.js';\nimport Col from 'react-bootstrap/lib/Col.js';\nimport EmbedSong from './EmbedSong.js';\nimport Image from 'react-bootstrap/lib/Image.js';\nimport MultiGenreSelect from './MultiGenreSelect.js';\n\n\n\nclass MatchingSettings extends Component{\n  constructor(props){\n    super();\n\n    this.state = {\n      min:props.currentLogin.followerRangeMin,\n      max:props.currentLogin.followerRangeMax,\n      genre: props.currentLogin.genre,\n      song1: props.currentLogin.song1,\n      song2: props.currentLogin.song2,\n      song3: props.currentLogin.song3,\n      profileURL: props.currentLogin.profilePictureURL,\n      value: props.currentLogin.genre,\n    }\n  };\n\n\n  handleMin(inputEvent){\n    this.setState({min: inputEvent.target.value});\n  }\n\n  handleMax(inputEvent){\n    this.setState({max: inputEvent.target.value});\n  }\n\n  handleURL(inputEvent){\n    const songNum = inputEvent.target.name;\n    const url = inputEvent.target.value;\n    this.setState({[songNum]: url});\n  }\n\n  handleProfile(inputEvent){\n      this.setState({profileURL: inputEvent.target.value});\n  }\n\n  handleGenre(genre){\n      console.log(genre);\n      this.setState({genre: genre});\n      console.log(this.state.genre)\n  }\n\n  handleSave(){ //sends the updatedUserObj back up to App.js\n    let updatedUserObj = Object.assign({}, this.props.currentLogin, {\n      followerRangeMin:this.state.min,\n      followerRangeMax:this.state.max,\n      genre: this.state.value,\n      song1: this.state.song1,\n      song2: this.state.song2,\n      song3: this.state.song3,\n      profilePictureURL: this.state.profileURL\n    });\n    this.props.updateSettings(updatedUserObj);\n    alert(\"Changes Saved!\")\n  }\n\n  handleSelectChange (value) {\n    console.log('You\\'ve selected:', value);\n    this.setState({ value });\n  }\n\n\n  render() {\n    let profilePicture = (\n      <Grid>\n        <Col lg={2} md={2}>\n          <Image src={this.state.profileURL}  circle width=\"114px\" height=\"114px\"/>\n        </Col>\n        <Col lg={10} md={10}>\n          <Row><h5> Edit profile picture </h5></Row>\n          <Row><input style={{display: 'inline'}} id=\"profileURL\" type=\"text\" width=\"50px\" size=\"auto\" value={this.state.profileURL} onChange={(event)=>{this.handleProfile(event)}}/></Row>\n        </Col>\n      </Grid>)\n    let minFollowers = (<input style={{display: 'inline'}} id=\"minFollowers\" type=\"text\" size=\"10\" value={this.state.min} onChange={(event)=>{this.handleMin(event)}} />);\n    let maxFollowers = (<input style={{display: 'inline'}} id=\"maxFollowers\" type=\"text\" size=\"10\" value={this.state.max} onChange={(event)=>{this.handleMax(event)}} />);\n\n    let counter = 0;\n\n    let genre = (<MultiGenreSelect style={{paddingRight: '20px'}} handleSelectChange={(value)=>this.handleSelectChange(value)} value={this.state.value}/>)\n\n\n\n      return(\n        <Grid>\n          <Row bsClass=\"topRow\">\n            <Col lg={6} md={6}>\n              <h1>Account Settings</h1>\n                <Row bsClass=\"middleRow\">\n                  {profilePicture}\n                </Row>\n                <Row bsClass=\"middleRow\">\n                  <div id=\"slider\" >\n                    <h5 style={{display: 'inline'}}> Follower Range </h5>\n                    {minFollowers}\n                    <p style={{display: 'inline'}}> to </p>\n                    {maxFollowers}\n                  </div>\n                </Row>\n                <Row bsClass=\"middleRow\">\n                  <div style={{paddingRight:'150px'}}>\n                    {genre}\n                  </div>\n                </Row>\n                <Row bsClass=\"middleRow\">\n                  <Button bsStyle=\"primary\" onClick={(event)=> {this.handleSave()}}>Save</Button>\n                </Row>\n              </Col>\n              <Col lg={6} md={6}>\n                <Row bsClass=\"padded\">\n                  <EmbedSong songURL={this.props.currentLogin.song1}></EmbedSong>\n                  <h5 style={{display: 'inline'}}> URL </h5>\n                  <input style={{display: 'inline'}} name=\"song1\" type=\"text\" size=\"auto\" value={this.state.song1} onChange={(event)=> {this.handleURL(event)}} />\n                </Row>\n                <Row bsClass=\"padded\">\n                  <EmbedSong songURL={this.props.currentLogin.song2}></EmbedSong>\n                  <h5 style={{display: 'inline'}}> URL </h5>\n                  <input style={{display: 'inline'}} name=\"song2\" type=\"text\" size=\"auto\" value={this.state.song2} onChange={(event)=> {this.handleURL(event)}} />\n                </Row>\n                <Row bsClass=\"padded\">\n                  <EmbedSong songURL={this.props.currentLogin.song3}></EmbedSong>\n                  <h5 style={{display: 'inline'}}> URL </h5>\n                  <input style={{display: 'inline'}} name=\"song3\" type=\"text\" size=\"auto\" value={this.state.song3} onChange={(event)=> {this.handleURL(event)}} />\n                </Row>\n              </Col>\n          </Row>\n        </Grid>\n\n      );\n\n  }\n}\n\nexport default MatchingSettings;\n"}],"errorCount":0,"warningCount":1}},"src/Components/MatchPage.js":{"hash":"b872397735250557a69b5e69c79ec7f2","res":{"results":[{"filePath":"/Users/hannahbeach983/Desktop/Sounder/frontEnd/src/Components/MatchPage.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/HomePage.js":{"hash":"7154375abc8b535b8114c241767e1b15","res":{"results":[{"filePath":"/Users/hannahbeach983/Desktop/Sounder/frontEnd/src/Components/HomePage.js","messages":[{"ruleId":"no-unused-expressions","severity":1,"message":"Expected an assignment or function call and instead saw an expression.","line":32,"column":3,"nodeType":"ExpressionStatement","source":"  console.log"}],"errorCount":0,"warningCount":1,"source":"/*\n  HomePage.js\n\n  This provides the implementation for the Home Page component.\n\n  HomePage does not maintain its own state.\n\n  HomePage takes in five props: setMode, setLogout, currentLogin, clickMatch, matchlist.\n  -currentLogin is an object that stores the account information\n  for the person who is currently logged in, this will be passed into the functional component UserDetail.\n  -clickMatch is a callback function to be passed in as props to the functional component MatchLog\n  -matchlist is an array of objects that needs to be passed into the functional component Matchlog.\n\n  HomePage uses two other functional components: UserDetail and MatchLog. UserDetail represents the user\n  profile of whoever is currently logged in. MatchLog represents the list of Artists currentLogin has already matched with.\n\n*/\n\n\nimport React from 'react';\n//import styled from 'styled-components';\nimport UserDetail from './UserDetail.js';\nimport MatchLog from './MatchLog.js';\nimport Grid from 'react-bootstrap/lib/Grid.js';\nimport Row from 'react-bootstrap/lib/Row.js';\nimport Col from 'react-bootstrap/lib/Col.js';\n//import Button from 'react-bootstrap/lib/Button.js';\nimport '../index.css';\n\nfunction HomePage(props) {\n  console.log(\"home apge\");\n  console.log\n  return (\n    <Grid>\n      <Row bsClass=\"topRow\">\n        <Col lg={9} md={9} sm={5}>\n          <UserDetail currentLogin={props.currentLogin} />\n        </Col>\n        <Col lg={3} md={3} sm={3}>\n          <MatchLog matchlist={props.matchlist} clickMatch={(match)=>props.clickMatch(match)} matchTimes={props.matchTimes}/>\n        </Col>\n      </Row>\n    </Grid>\n\n  )\n\n}\n\nexport default HomePage;\n"}],"errorCount":0,"warningCount":1}},"src/Components/MatchDetailPage.js":{"hash":"1211e88a44db38ec0e45448eef299f79","res":{"results":[{"filePath":"/Users/bentindall/Documents/Sounder/frontEnd/src/Components/MatchDetailPage.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/NavBar.js":{"hash":"4bd708225030eb1b1a2efba08621490d","res":{"results":[{"filePath":"/Users/hannahbeach983/Desktop/Sounder/frontEnd/src/Components/NavBar.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/UserDetail.js":{"hash":"783a7a128b71cdb66b27d229b1838c50","res":{"results":[{"filePath":"/Users/bentindall/Documents/Sounder/frontEnd/src/Components/UserDetail.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/MatchLog.js":{"hash":"320d1ef7dde5c144f37e8459e894f630","res":{"results":[{"filePath":"/Users/hannahbeach983/Desktop/Sounder/frontEnd/src/Components/MatchLog.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'TimeStyle' is assigned a value but never used.","line":55,"column":7,"nodeType":"Identifier","source":"const TimeStyle = styled.p`"}],"errorCount":0,"warningCount":1,"source":"/*\n\nMatchLog.js\n\nMatchLog takes in 2 props: matchlist and clickMatch\n-matchlist is an array of objects that store the acccount information\nof the artists that currentLogin has matched with\n-clickMatch is a callback function that updates the state of mode and currentMatch in App.js\n\n\n*/\n\n\nimport React  from 'react';\nimport styled from 'styled-components';\nimport Grid from 'react-bootstrap/lib/Grid.js';\nimport Row from 'react-bootstrap/lib/Row.js';\nimport Col from 'react-bootstrap/lib/Col.js';\nimport ListGroup from 'react-bootstrap/lib/ListGroup.js';\nimport ListGroupItem from 'react-bootstrap/lib/ListGroupItem.js';\nimport '../index.css';\nimport Popover from 'react-bootstrap/lib/Popover.js';\nimport OverlayTrigger from 'react-bootstrap/lib/OverlayTrigger.js';\n\nconst CenteredTitle=styled.h2`\n  font-weight: bold;\n  text-align: center;\n  border-bottom: 2px solid #ff4b00;\n  padding-bottom: 10px;\n`;\n\nconst MatchName = styled(ListGroupItem)`\n  color: black;\n  font-size: 16px;\n  curson: pointer;\n  &:hover {\n   color: #FF7700;\n }\n\n`;\n\nconst MatchNameStyle = styled(Col)`\n cursor: pointer;\n  &:hover {\n   color: #FF7700;\n }\n`\nconst NameStyle = styled.p`\n cursor: pointer;\n font-weight: bold;\n  &:hover {\n   color: #FF7700;\n }\n `\nconst TimeStyle = styled.p`\n cursor: pointer;\n font-style: italic;\n  &:hover {\n   color: #FF7700;\n }\n`\n\nconst MatchPreview = styled(Popover)`\n  width: 400px;\n\n`\n\n\nfunction MatchLog(props){\n  const matchlog = (props.matchlist).map((user)=>{\n    let name = user.username;\n    let timeString = props.matchTimes[user.id][0];\n    let time;\n    if (timeString.length === 11){\n        time = timeString;\n    } else{\n      time = '';\n\n    }\n  //  name = name + ' ' + time;\n    const popoverHoverFocus = (\n    <MatchPreview id=\"popover-trigger-hover-focus\" title={name}  positionLeft={200}\n      positionTop={50}>\n      <p><strong>Genre</strong> {user.genre.replace(/,/g, \", \")}</p>\n      <p><strong>Followers</strong> {user.numFollowers}</p>\n      <p><strong>Karma</strong> {user.karma}</p>\n      <p><strong>Matched</strong> {time}</p>\n    </MatchPreview>\n  );\n    return (\n        <MatchName key={name} value={name} onClick={()=>{console.log(user);props.clickMatch(user)}}>\n          <OverlayTrigger trigger={['hover', 'focus']} placement=\"top\" overlay={popoverHoverFocus} arrowOffsetLeft='40px'>\n            <MatchNameStyle lg={12}> <NameStyle>{name}</NameStyle></MatchNameStyle>\n          </OverlayTrigger>\n        </MatchName>\n    );\n  });\n\n  return (\n    <Grid fluid={true}>\n      <Row>\n        <Col lg={12} md={12}><CenteredTitle>Matches</CenteredTitle></Col>\n      </Row>\n      <Row>\n        <Col lg={12} md={12}>\n          <ListGroup>{matchlog}</ListGroup>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default MatchLog;\n"}],"errorCount":0,"warningCount":1}},"src/Components/EmbedSong.js":{"hash":"82adc6e240fdc84163c781f6055b6446","res":{"results":[{"filePath":"/Users/bentindall/Documents/Sounder/frontEnd/src/Components/EmbedSong.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/MultiGenreSelect.js":{"hash":"7454ba59ea6eacfd2d68ad4b1ad285f8","res":{"results":[{"filePath":"/Users/bentindall/Documents/Sounder/frontEnd/src/Components/MultiGenreSelect.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}}}
=======
{"src/index.js":{"hash":"2f0038e480b14d8aefa4058365397691","res":{"results":[{"filePath":"/Users/jessieyorke/Documents/cs312/Sounder/frontEnd/src/index.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/App.js":{"hash":"393206316729402351d96c4823fc5b68","res":{"results":[{"filePath":"/Users/jessieyorke/Documents/cs312/Sounder/frontEnd/src/App.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/HomePage.js":{"hash":"7154375abc8b535b8114c241767e1b15","res":{"results":[{"filePath":"/Users/jessieyorke/Documents/cs312/Sounder/frontEnd/src/Components/HomePage.js","messages":[{"ruleId":"no-unused-expressions","severity":1,"message":"Expected an assignment or function call and instead saw an expression.","line":32,"column":3,"nodeType":"ExpressionStatement","source":"  console.log"}],"errorCount":0,"warningCount":1,"source":"/*\n  HomePage.js\n\n  This provides the implementation for the Home Page component.\n\n  HomePage does not maintain its own state.\n\n  HomePage takes in five props: setMode, setLogout, currentLogin, clickMatch, matchlist.\n  -currentLogin is an object that stores the account information\n  for the person who is currently logged in, this will be passed into the functional component UserDetail.\n  -clickMatch is a callback function to be passed in as props to the functional component MatchLog\n  -matchlist is an array of objects that needs to be passed into the functional component Matchlog.\n\n  HomePage uses two other functional components: UserDetail and MatchLog. UserDetail represents the user\n  profile of whoever is currently logged in. MatchLog represents the list of Artists currentLogin has already matched with.\n\n*/\n\n\nimport React from 'react';\n//import styled from 'styled-components';\nimport UserDetail from './UserDetail.js';\nimport MatchLog from './MatchLog.js';\nimport Grid from 'react-bootstrap/lib/Grid.js';\nimport Row from 'react-bootstrap/lib/Row.js';\nimport Col from 'react-bootstrap/lib/Col.js';\n//import Button from 'react-bootstrap/lib/Button.js';\nimport '../index.css';\n\nfunction HomePage(props) {\n  console.log(\"home apge\");\n  console.log\n  return (\n    <Grid>\n      <Row bsClass=\"topRow\">\n        <Col lg={9} md={9} sm={5}>\n          <UserDetail currentLogin={props.currentLogin} />\n        </Col>\n        <Col lg={3} md={3} sm={3}>\n          <MatchLog matchlist={props.matchlist} clickMatch={(match)=>props.clickMatch(match)} matchTimes={props.matchTimes}/>\n        </Col>\n      </Row>\n    </Grid>\n\n  )\n\n}\n\nexport default HomePage;\n"}],"errorCount":0,"warningCount":1}},"src/Components/LoginPage.js":{"hash":"e51ba97221dc41567ba789ffe66e4ea7","res":{"results":[{"filePath":"/Users/jessieyorke/Documents/cs312/Sounder/frontEnd/src/Components/LoginPage.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/SignUpPage.js":{"hash":"bfe163d83973427cfec09170e250b4cd","res":{"results":[{"filePath":"/Users/jessieyorke/Documents/cs312/Sounder/frontEnd/src/Components/SignUpPage.js","messages":[{"ruleId":"array-callback-return","severity":1,"message":"Expected to return a value in this function.","line":172,"column":31,"nodeType":"FunctionExpression","source":"  Object.keys(newUserObj).map(function(key){ //checks that all fields complete"}],"errorCount":0,"warningCount":1,"source":"/*\n  SignUpPage.js\n\n  This provides the implementation for the signUp page.\n\n\n*/\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport MultiGenreSelect from './MultiGenreSelect.js';\n\n//import Col from 'react-bootstrap/lib/Col.js';\n\n\nconst LoginPage = styled.div`\n  text-align: center;\n  margin-top: 100px;\n  height: 50%;\n`;\n\nconst UsernameInput = styled.div`\n  background-color: #FF7700; /* orange  */\n  position: relative;\n  padding: 10px;\n  font-size: 16px;\n  height:50;\n  width: 300px;\n  display: inline-block;\n`;\n\n\n\nconst LoginButton = styled.div`\n  background-color: #525252; /* Green */\n  border: none;\n  color: white;\n  padding: 10px 20px 10px 20px;\n  cursor: pointer;\n  border-radius: 28px;\n  margin-right: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin-top: 10px;\n  &:hover {\n   background-color:#FF7700;\n }\n\n`;\n\nconst SounderHeader = styled.div`\n  font-size: 3.0em;\n  font-weight: bold;\n  font-variant: small-caps;\n  color:#525252;\n`;\n\nconst Input = styled.input`\n  width:200px;\n  height:25px;\n\n`;\n\nclass SignUp extends Component{\n  constructor(){\n    super();\n    this.state = {\n      id: '',\n      username: '',\n      password: '',\n      song1: '',\n      song2: '',\n      song3: '',\n      profileURL: '',\n      genres: '', //make this an array later\n      numFollowers: '',\n      profilePictureURL: '',\n      email: '',\n\t\t\tvalue: []\n\n    }\n  };\n\nhandleSelectChange (value) {\n  console.log('You\\'ve selected:', value);\n  this.setState({ value });\n  console.log(this.state.value);\n}\n\nhandleUsername(inputEvent){\n  this.setState({username: inputEvent.target.value});\n}\n\nhandlePassword(inputEvent){\n  this.setState({password: inputEvent.target.value});\n}\n\nhandleSong1(inputEvent){\n  this.setState({song1: inputEvent.target.value});\n}\n\nhandleSong2(inputEvent){\n  this.setState({song2: inputEvent.target.value});\n}\n\nhandleSong3(inputEvent){\n  this.setState({song3: inputEvent.target.value});\n}\n\nhandleProfileURL(inputEvent){\n  this.setState({profileURL: inputEvent.target.value});\n}\n\nhandleNumFollowers(inputEvent){\n  this.setState({numFollowers: inputEvent.target.value});\n}\n\nhandleGenres(inputEvent){ //make this an array handler later\n  this.setState({genres: inputEvent.target.value});\n}\n\nhandlePhotoURL(inputEvent){\n  this.setState({profilePictureURL: inputEvent.target.value});\n\n}\n\nhandleEmail(inputEvent){\n  this.setState({email: inputEvent.target.value});\n}\n\n\n\n\n/*\n ********************************************************************\n User Object Creation: put all standardized property conventions here\n ********************************************************************\n*/\n\ncreateUser(){ //creates the actual user object\n  let newUserObj = {\n  username: this.state.username,\n  password: this.state.password,\n  song1: this.state.song1,\n  song2: this.state.song2,\n  song3: this.state.song3,\n  profileURL: this.state.profileURL,\n  genre: this.state.value, //make this an array later\n  numFollowers: this.state.numFollowers,\n  profilePictureURL: this.state.profilePictureURL,\n  email: this.state.email,\n  karma: 0,\n\n  /* How to handle these? */\n\n  //id:\n  //followers:\n  //id;\n  //followers: //who follows the user\n  //following: //who the user follows\n  //followerRange:\n  //peopleYouLike:\n  //peopleWhoLikedYou:\n  //currentMatches:\n  //pastMatches:\n  //online:\n  }\n\n  console.log(this.state.value);\n  let complete = true;\n  Object.keys(newUserObj).map(function(key){ //checks that all fields complete\n    if (newUserObj[key] === \"\"){\n      complete = false;\n      alert(\"please fill out the \" + key + \" section\");\n    }\n  })\n  if (complete === true){\n    this.props.newUser(newUserObj);\n  }\n}\n\nrender() {\n  let usernameInput = (<Input  placeholder=\"Username\" type=\"text\" value={this.state.username} onChange={(event)=>{this.handleUsername(event)}}/>);\n  let passwordInput = (<Input  placeholder=\"Password\" type=\"text\" value={this.state.password} onChange={(event)=>{this.handlePassword(event)}}/>);\n  let song1Input = (<Input  placeholder=\"Song 1 URL\" type=\"text\" value={this.state.song1} onChange={(event)=>{this.handleSong1(event)}}/>);\n  let song2Input = (<Input  placeholder=\"Song 2 URL\" type=\"text\" value={this.state.song2} onChange={(event)=>{this.handleSong2(event)}}/>);\n  let song3Input = (<Input  placeholder=\"Song 3 URL\" type=\"text\" value={this.state.song3} onChange={(event)=>{this.handleSong3(event)}}/>);\n  let profileURLInput = (<Input  placeholder=\"Soundcloud Profile URL\" type=\"text\" value={this.state.profileURL} onChange={(event)=>{this.handleProfileURL(event)}}/>);\n  let numFollowersInput = (<Input  placeholder=\"# of SC Followers\" type=\"text\" value={this.state.numFollowers} onChange={(event)=>{this.handleNumFollowers(event)}}/>);\n  let photoURLInput = (<Input  placeholder=\"Photo URL\" type=\"text\" value={this.state.profilePictureURL} onChange={(event)=>{this.handlePhotoURL(event)}}/>);\n  let emailInput = (<Input  placeholder=\"Email\" type=\"text\" value={this.state.email} onChange={(event)=>{this.handleEmail(event)}}/>);\n  let genre = (<MultiGenreSelect handleSelectChange={(value)=>this.handleSelectChange(value)} value={this.state.value}/>)\n  let signUp = (<LoginButton onClick={()=>this.createUser()}>Sign Up</LoginButton>);\n  let cancel = (<LoginButton onClick={()=>this.props.switchToLogin()} >Cancel</LoginButton>);\n\n\n    return(\n      <LoginPage>\n        <SounderHeader>\n        Sounder\n        </SounderHeader>\n        <UsernameInput>\n          {usernameInput}\n        </UsernameInput>\n\n        <div>\n          <UsernameInput>\n            {passwordInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {song1Input}\n            {song2Input}\n            {song3Input}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {profileURLInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {numFollowersInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {genre}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {photoURLInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n          <UsernameInput>\n            {emailInput}\n          </UsernameInput>\n        </div>\n\n        <div>\n        {signUp}\n        {cancel}\n        </div>\n        </LoginPage>\n\n      );\n\n}\n}\nexport default SignUp;\n"}],"errorCount":0,"warningCount":1}},"src/Components/MatchPage.js":{"hash":"b872397735250557a69b5e69c79ec7f2","res":{"results":[{"filePath":"/Users/jessieyorke/Documents/cs312/Sounder/frontEnd/src/Components/MatchPage.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/MatchingSettingsPage.js":{"hash":"9a7c287aa8dba6a24b83e6ccb7959d08","res":{"results":[{"filePath":"/Users/jessieyorke/Documents/cs312/Sounder/frontEnd/src/Components/MatchingSettingsPage.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'counter' is assigned a value but never used.","line":93,"column":9,"nodeType":"Identifier","source":"    let counter = 0;"}],"errorCount":0,"warningCount":1,"source":"/*\n  MatchingSettingsPage.js\n\n  This provides the implementation for the profile component.\n\n*/\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/lib/Button.js';\nimport Grid from 'react-bootstrap/lib/Grid.js';\nimport Row from 'react-bootstrap/lib/Row.js';\nimport Col from 'react-bootstrap/lib/Col.js';\nimport EmbedSong from './EmbedSong.js';\nimport Image from 'react-bootstrap/lib/Image.js';\nimport MultiGenreSelect from './MultiGenreSelect.js';\n\n\n\nclass MatchingSettings extends Component{\n  constructor(props){\n    super();\n\n    this.state = {\n      min:props.currentLogin.followerRangeMin,\n      max:props.currentLogin.followerRangeMax,\n      genre: props.currentLogin.genre,\n      song1: props.currentLogin.song1,\n      song2: props.currentLogin.song2,\n      song3: props.currentLogin.song3,\n      profileURL: props.currentLogin.profilePictureURL,\n      value: props.currentLogin.genre,\n    }\n  };\n\n\n  handleMin(inputEvent){\n    this.setState({min: inputEvent.target.value});\n  }\n\n  handleMax(inputEvent){\n    this.setState({max: inputEvent.target.value});\n  }\n\n  handleURL(inputEvent){\n    const songNum = inputEvent.target.name;\n    const url = inputEvent.target.value;\n    this.setState({[songNum]: url});\n  }\n\n  handleProfile(inputEvent){\n      this.setState({profileURL: inputEvent.target.value});\n  }\n\n  handleGenre(genre){\n      console.log(genre);\n      this.setState({genre: genre});\n      console.log(this.state.genre)\n  }\n\n  handleSave(){ //sends the updatedUserObj back up to App.js\n    let updatedUserObj = Object.assign({}, this.props.currentLogin, {\n      followerRangeMin:this.state.min,\n      followerRangeMax:this.state.max,\n      genre: this.state.value,\n      song1: this.state.song1,\n      song2: this.state.song2,\n      song3: this.state.song3,\n      profilePictureURL: this.state.profileURL\n    });\n    this.props.updateSettings(updatedUserObj);\n    alert(\"Changes Saved!\")\n  }\n\n  handleSelectChange (value) {\n    console.log('You\\'ve selected:', value);\n    this.setState({ value });\n  }\n\n\n  render() {\n    let profilePicture = (\n      <Grid>\n        <Col lg={2} md={2}>\n          <Image src={this.state.profileURL}  circle width=\"114px\" height=\"114px\"/>\n        </Col>\n        <Col lg={10} md={10}>\n          <Row><h5> Edit profile picture </h5></Row>\n          <Row><input style={{display: 'inline'}} id=\"profileURL\" type=\"text\" width=\"50px\" size=\"auto\" value={this.state.profileURL} onChange={(event)=>{this.handleProfile(event)}}/></Row>\n        </Col>\n      </Grid>)\n    let minFollowers = (<input style={{display: 'inline'}} id=\"minFollowers\" type=\"text\" size=\"10\" value={this.state.min} onChange={(event)=>{this.handleMin(event)}} />);\n    let maxFollowers = (<input style={{display: 'inline'}} id=\"maxFollowers\" type=\"text\" size=\"10\" value={this.state.max} onChange={(event)=>{this.handleMax(event)}} />);\n\n    let counter = 0;\n\n    let genre = (<MultiGenreSelect style={{paddingRight: '20px'}} handleSelectChange={(value)=>this.handleSelectChange(value)} value={this.state.value}/>)\n\n\n\n      return(\n        <Grid>\n          <Row bsClass=\"topRow\">\n            <Col lg={6} md={6}>\n              <h1>Account Settings</h1>\n                <Row bsClass=\"middleRow\">\n                  {profilePicture}\n                </Row>\n                <Row bsClass=\"middleRow\">\n                  <div id=\"slider\" >\n                    <h5 style={{display: 'inline'}}> Follower Range </h5>\n                    {minFollowers}\n                    <p style={{display: 'inline'}}> to </p>\n                    {maxFollowers}\n                  </div>\n                </Row>\n                <Row bsClass=\"middleRow\">\n                  <div style={{paddingRight:'150px'}}>\n                    {genre}\n                  </div>\n                </Row>\n                <Row bsClass=\"middleRow\">\n                  <Button bsStyle=\"primary\" onClick={(event)=> {this.handleSave()}}>Save</Button>\n                </Row>\n              </Col>\n              <Col lg={6} md={6}>\n                <Row bsClass=\"padded\">\n                  <EmbedSong songURL={this.props.currentLogin.song1}></EmbedSong>\n                  <h5 style={{display: 'inline'}}> URL </h5>\n                  <input style={{display: 'inline'}} name=\"song1\" type=\"text\" size=\"auto\" value={this.state.song1} onChange={(event)=> {this.handleURL(event)}} />\n                </Row>\n                <Row bsClass=\"padded\">\n                  <EmbedSong songURL={this.props.currentLogin.song2}></EmbedSong>\n                  <h5 style={{display: 'inline'}}> URL </h5>\n                  <input style={{display: 'inline'}} name=\"song2\" type=\"text\" size=\"auto\" value={this.state.song2} onChange={(event)=> {this.handleURL(event)}} />\n                </Row>\n                <Row bsClass=\"padded\">\n                  <EmbedSong songURL={this.props.currentLogin.song3}></EmbedSong>\n                  <h5 style={{display: 'inline'}}> URL </h5>\n                  <input style={{display: 'inline'}} name=\"song3\" type=\"text\" size=\"auto\" value={this.state.song3} onChange={(event)=> {this.handleURL(event)}} />\n                </Row>\n              </Col>\n          </Row>\n        </Grid>\n\n      );\n\n  }\n}\n\nexport default MatchingSettings;\n"}],"errorCount":0,"warningCount":1}},"src/Components/NavBar.js":{"hash":"4bd708225030eb1b1a2efba08621490d","res":{"results":[{"filePath":"/Users/jessieyorke/Documents/cs312/Sounder/frontEnd/src/Components/NavBar.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/MatchDetailPage.js":{"hash":"1211e88a44db38ec0e45448eef299f79","res":{"results":[{"filePath":"/Users/jessieyorke/Documents/cs312/Sounder/frontEnd/src/Components/MatchDetailPage.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/MatchLog.js":{"hash":"320d1ef7dde5c144f37e8459e894f630","res":{"results":[{"filePath":"/Users/jessieyorke/Documents/cs312/Sounder/frontEnd/src/Components/MatchLog.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'TimeStyle' is assigned a value but never used.","line":55,"column":7,"nodeType":"Identifier","source":"const TimeStyle = styled.p`"}],"errorCount":0,"warningCount":1,"source":"/*\n\nMatchLog.js\n\nMatchLog takes in 2 props: matchlist and clickMatch\n-matchlist is an array of objects that store the acccount information\nof the artists that currentLogin has matched with\n-clickMatch is a callback function that updates the state of mode and currentMatch in App.js\n\n\n*/\n\n\nimport React  from 'react';\nimport styled from 'styled-components';\nimport Grid from 'react-bootstrap/lib/Grid.js';\nimport Row from 'react-bootstrap/lib/Row.js';\nimport Col from 'react-bootstrap/lib/Col.js';\nimport ListGroup from 'react-bootstrap/lib/ListGroup.js';\nimport ListGroupItem from 'react-bootstrap/lib/ListGroupItem.js';\nimport '../index.css';\nimport Popover from 'react-bootstrap/lib/Popover.js';\nimport OverlayTrigger from 'react-bootstrap/lib/OverlayTrigger.js';\n\nconst CenteredTitle=styled.h2`\n  font-weight: bold;\n  text-align: center;\n  border-bottom: 2px solid #ff4b00;\n  padding-bottom: 10px;\n`;\n\nconst MatchName = styled(ListGroupItem)`\n  color: black;\n  font-size: 16px;\n  curson: pointer;\n  &:hover {\n   color: #FF7700;\n }\n\n`;\n\nconst MatchNameStyle = styled(Col)`\n cursor: pointer;\n  &:hover {\n   color: #FF7700;\n }\n`\nconst NameStyle = styled.p`\n cursor: pointer;\n font-weight: bold;\n  &:hover {\n   color: #FF7700;\n }\n `\nconst TimeStyle = styled.p`\n cursor: pointer;\n font-style: italic;\n  &:hover {\n   color: #FF7700;\n }\n`\n\nconst MatchPreview = styled(Popover)`\n  width: 400px;\n\n`\n\n\nfunction MatchLog(props){\n  const matchlog = (props.matchlist).map((user)=>{\n    let name = user.username;\n    let timeString = props.matchTimes[user.id][0];\n    let time;\n    if (timeString.length === 11){\n        time = timeString;\n    } else{\n      time = '';\n\n    }\n  //  name = name + ' ' + time;\n    const popoverHoverFocus = (\n    <MatchPreview id=\"popover-trigger-hover-focus\" title={name}  positionLeft={200}\n      positionTop={50}>\n      <p><strong>Genre</strong> {user.genre.replace(/,/g, \", \")}</p>\n      <p><strong>Followers</strong> {user.numFollowers}</p>\n      <p><strong>Karma</strong> {user.karma}</p>\n      <p><strong>Matched</strong> {time}</p>\n    </MatchPreview>\n  );\n    return (\n        <MatchName key={name} value={name} onClick={()=>{console.log(user);props.clickMatch(user)}}>\n          <OverlayTrigger trigger={['hover', 'focus']} placement=\"top\" overlay={popoverHoverFocus} arrowOffsetLeft='40px'>\n            <MatchNameStyle lg={12}> <NameStyle>{name}</NameStyle></MatchNameStyle>\n          </OverlayTrigger>\n        </MatchName>\n    );\n  });\n\n  return (\n    <Grid fluid={true}>\n      <Row>\n        <Col lg={12} md={12}><CenteredTitle>Matches</CenteredTitle></Col>\n      </Row>\n      <Row>\n        <Col lg={12} md={12}>\n          <ListGroup>{matchlog}</ListGroup>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default MatchLog;\n"}],"errorCount":0,"warningCount":1}},"src/Components/MultiGenreSelect.js":{"hash":"7454ba59ea6eacfd2d68ad4b1ad285f8","res":{"results":[{"filePath":"/Users/jessieyorke/Documents/cs312/Sounder/frontEnd/src/Components/MultiGenreSelect.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/UserDetail.js":{"hash":"783a7a128b71cdb66b27d229b1838c50","res":{"results":[{"filePath":"/Users/jessieyorke/Documents/cs312/Sounder/frontEnd/src/Components/UserDetail.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/Components/EmbedSong.js":{"hash":"82adc6e240fdc84163c781f6055b6446","res":{"results":[{"filePath":"/Users/jessieyorke/Documents/cs312/Sounder/frontEnd/src/Components/EmbedSong.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}}}
>>>>>>> 2b49b92d758977aa45d39db5cc3f787913124882
